services:
  # backend:
  #   build: ./backend
  #   restart: always
  #   env_file: ./backend/.env
  #   volumes:
  #     - ./backend:/app
  #     - ./uploads:/uploads
  #     - ./logs:/logs
  #   ports:
  #     - "8000:5888"
  #   depends_on:
  #     - postgres

  # postgres:
  #   image: postgres:16-alpine
  #   restart: always
  #   env_file: ./backend/.env
  #   ports:
  #     - "5433:5432"
  #   volumes:
  #     - stock_postgres:/var/lib/postgresql/data
  
  # frontend:
  #   build: ./frontend
  #   volumes:
  #     - ./frontend:/app         # sync code changes
  #     - /app/node_modules       # prevent overwriting node_modules
  #   ports:
  #     - "5173:5173"
  #   depends_on:
  #     - backend
  
  # nginx:
  #   image: nginx:1.26-alpine
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx:/etc/nginx/conf.d:ro
  #     - ./uploads:/uploads
  #   depends_on:
  #     - frontend

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
      - zookeeper

  jobmanager:
    image: flink:1.18.1-scala_2.12-java11
    hostname: jobmanager
    ports:
      - "8081:8081"  # Flink Web UI
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager

  taskmanager:
    image: flink:1.18.1-scala_2.12-java11
    depends_on:
      - jobmanager
    command: taskmanager
    scale: 1
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      - TASK_MANAGER_NUMBER_OF_TASK_SLOTS=2

  pyflink:
    build: ./kafka_test
    depends_on:
      - jobmanager
      - taskmanager
      - kafka
    volumes:
      - ./kafka_test/flink-jobs:/jobs  # mount local Python job files
    working_dir: /jobs
    entrypoint: ["tail", "-f", "/dev/null"]  # keep container alive

volumes:
  stock_postgres:

networks:
  default:
    name: stock_net